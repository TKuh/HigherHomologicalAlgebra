# SPDX-License-Identifier: GPL-2.0-or-later
# HomotopyCategories: Homotopy categories of additive categories
#
# Declarations
#
#
#! @Chapter HomotopyCategories
#
#############################################################################

InfoHomotopyCategories := NewInfoClass( "InfoHomotopyCategories" );

SetInfoLevel( InfoHomotopyCategories, 1 );

DeclareCategory( "IsHomotopyCategory",
                 IsStableCategory );

KeyDependentOperation( "HomotopyCategory", IsCapCategory, IsBool, ReturnTrue );

DeclareAttribute( "HomotopyCategoryByChains", IsCapCategory );
if false then
DeclareAttribute( "HomotopyCategory", IsCapCategory );
fi;

DeclareAttribute( "HomotopyCategoryByCochains", IsCapCategory );
DeclareAttribute( "CohomotopyCategory", IsCapCategory );

DeclareAttribute( "DefiningCategory", IsHomotopyCategory );

# @Description
# The input is a chain or cochain complex category $B=C(A)$ and an integer $n$. 
# The outout is the additive full subcategory generated by complexes concentrated in degree $n$.
# @Arguments B, n
# @Returns a CAP category
KeyDependentOperation( "FullSubcategoryGeneratedByObjectsConcentratedInDegree",
    IsHomotopyCategory, IsInt, ReturnTrue
);

DeclareAttribute( "TotalComplexUsingMappingCone", IsChainComplex );

DeclareGlobalFunction( "IS_COLIFTABLE_THROUGH_COLIFTING_OBJECT_IN_HOMOTOPY_CATEGORY" );
